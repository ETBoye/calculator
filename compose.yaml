version: '2'
services:

  nginx:
    image: nginx:1-alpine
    ports:
      - 8089:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/.htpasswd:/etc/nginx/.htpasswd
    restart: always

  backend:
    image: over-engineered-calculator-backend
    build: backend
    ports:
      - '8080:8080'
    restart: always
    environment:
      - GIN_MODE=${GIN_MODE}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=db
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:17-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=over-engineered-calculator
    ports:
      - '5432:5432'
    volumes: 
      - ./db/db-init.sql:/docker-entrypoint-initdb.d/db.sql
      - ./db/data:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 50

  frontend: 
    image: over-engineered-calculator-frontend
    build: frontend
    ports:
      - '3000:3000'
    restart: always 

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080
    command: --base /dozzle
    

      